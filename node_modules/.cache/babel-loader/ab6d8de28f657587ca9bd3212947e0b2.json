{"ast":null,"code":"var _jsxFileName = \"/home/karan-zoop/Documents/Sessions/redux-boilerplate-with-session/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './users/Users';\nimport './App.css';\nimport { selectUserData } from './redux/users/users.selector';\nimport { addUserData } from './redux/users/users.actions';\n\nfunction App(props) {\n  console.log(props);\n\n  const addUser = evt => {\n    if (evt && evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    const form = new FormData(evt.target);\n    let postData = {};\n\n    for (let pair of form.entries()) {\n      postData[pair[0]] = pair[1];\n    }\n\n    props.addUserData(postData);\n    evt.target.reset();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"CLEAR\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"email@gmail.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"SAVE\")), /*#__PURE__*/React.createElement(Users, {\n    users: props.users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  const {\n    session\n  } = state;\n  return {\n    checked: session.checked,\n    authenticated: session.authenticated,\n    users: selectUserData(state.userData.users)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addUserData: user => dispatch(addUserData(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/karan-zoop/Documents/Sessions/redux-boilerplate-with-session/src/App.js"],"names":["React","connect","Users","selectUserData","addUserData","App","props","console","log","addUser","evt","preventDefault","form","FormData","target","postData","pair","entries","reset","users","mapStateToProps","state","session","checked","authenticated","userData","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,WAAP;AACA,SACCC,cADD,QAEO,8BAFP;AAGA,SAASC,WAAT,QAA4B,6BAA5B;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,QAAMG,OAAO,GAAIC,GAAD,IAAS;AACvB,QAAGA,GAAG,IAAIA,GAAG,CAACC,cAAd,EAA8B;AAC5BD,MAAAA,GAAG,CAACC,cAAJ;AACD;;AACD,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,GAAG,CAACI,MAAjB,CAAb;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAI,IAAIC,IAAR,IAAgBJ,IAAI,CAACK,OAAL,EAAhB,EAAgC;AAC5BF,MAAAA,QAAQ,CAACC,IAAI,CAAC,CAAD,CAAL,CAAR,GAAqBA,IAAI,CAAC,CAAD,CAAzB;AACH;;AACDV,IAAAA,KAAK,CAACF,WAAN,CAAkBW,QAAlB;AAEAL,IAAAA,GAAG,CAACI,MAAJ,CAAWI,KAAX;AAED,GAbD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAM,IAAA,QAAQ,EAAET,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,WAAW,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,WAAW,EAAC,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,CAFJ,eAOI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,KAAK,CAACa,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF;AAWD;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCd,EAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,SAAO;AACLE,IAAAA,OAAO,EAAED,OAAO,CAACC,OADZ;AAELC,IAAAA,aAAa,EAAEF,OAAO,CAACE,aAFlB;AAGLL,IAAAA,KAAK,EAAGhB,cAAc,CAACkB,KAAK,CAACI,QAAN,CAAeN,KAAhB;AAHjB,GAAP;AAKD,CARD;;AAUA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLvB,IAAAA,WAAW,EAAEwB,IAAI,IAAID,QAAQ,CAACvB,WAAW,CAACwB,IAAD,CAAZ;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAe3B,OAAO,CAACmB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CrB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './users/Users';\nimport './App.css';\nimport {\n\tselectUserData\n} from './redux/users/users.selector';\nimport { addUserData } from './redux/users/users.actions';\n\nfunction App(props) {\n  console.log(props)\n  const addUser = (evt) => {\n    if(evt && evt.preventDefault) {\n      evt.preventDefault();\n    }\n    const form = new FormData(evt.target);\n    let postData = {};\n    for(let pair of form.entries()) {\n        postData[pair[0]] =  pair[1]; \n    }\n    props.addUserData(postData)\n\n    evt.target.reset();\n\n  }\n  \n\n  return (\n    <div className=\"App\">\n        <button className=\"clear-all\">CLEAR</button>\n        <form onSubmit={addUser}>\n            <input type=\"text\" name=\"name\" placeholder=\"name\"/>\n            <input type=\"text\" name=\"email\" placeholder=\"email@gmail.com\"/>\n            <button className=\"submit-btn\">SAVE</button>\n        </form>\n        <Users users={props.users}/>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  const { session } = state;\n  return {\n    checked: session.checked,\n    authenticated: session.authenticated,\n    users : selectUserData(state.userData.users)\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addUserData: user => dispatch(addUserData(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}